{
  "version": 3,
  "sources": ["../../stacks/ApiStack.js", "../../stacks/StorageStack.js", "../../stacks/index.js"],
  "sourcesContent": ["import { Api, use } from \"@serverless-stack/resources\";\r\nimport { StorageStack } from \"./StorageStack\";\r\n\r\nexport function ApiStack({ stack, app }) {\r\n  const { table } = use(StorageStack);\r\n\r\n  // Create the API\r\n  const api = new Api(stack, \"Api\", {\r\n    defaults: {\r\n      function: {\r\n        permissions: [table],\r\n        environment: {\r\n          TABLE_NAME: table.tableName,\r\n        },\r\n      },\r\n    },\r\n    routes: {\r\n      \"GET /notes\": \"functions/list.main\",\r\n      \"POST /notes\": \"functions/create.main\",\r\n      \"GET /notes/{id}\": \"functions/get.main\",\r\n      \"PUT /notes/{id}\": \"functions/update.main\",\r\n      \"DELETE /notes/{id}\": \"functions/delete.main\",\r\n    },\r\n  });\r\n\r\n  // Show the API endpoint in the output\r\n  stack.addOutputs({\r\n    ApiEndpoint: api.url,\r\n  });\r\n\r\n  // Return the API resource\r\n  return {\r\n    api,\r\n  };\r\n}\r\n", "import { Bucket, Table } from \"@serverless-stack/resources\";\r\n\r\nexport function StorageStack({ stack, app }) {\r\n  // Create an S3 bucket\r\n  const bucket = new Bucket(stack, \"Uploads\");\r\n\r\n  // Create the DynamoDB table\r\n  const table = new Table(stack, \"Notes\", {\r\n    fields: {\r\n      userId: \"string\",\r\n      noteId: \"string\",\r\n    },\r\n    primaryIndex: { partitionKey: \"userId\", sortKey: \"noteId\" },\r\n  });\r\n\r\n  return {\r\n    table,\r\n    bucket,\r\n  };\r\n}\r\n", "import { ApiStack } from \"./ApiStack\";\r\nimport { StorageStack } from \"./StorageStack\";\r\n\r\nexport default function main(app) {\r\n  app.setDefaultFunctionProps({\r\n    runtime: \"nodejs16.x\",\r\n    srcPath: \"backend\",\r\n    bundle: {\r\n      format: \"esm\",\r\n    },\r\n  });\r\n  app.stack(StorageStack).stack(ApiStack);\r\n}\r\n"],
  "mappings": ";;;;;;AAAA;;;ACAA;AAEO,sBAAsB,EAAE,OAAO,OAAO;AAE3C,QAAM,SAAS,IAAI,OAAO,OAAO,SAAS;AAG1C,QAAM,QAAQ,IAAI,MAAM,OAAO,SAAS;AAAA,IACtC,QAAQ;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,IACA,cAAc,EAAE,cAAc,UAAU,SAAS,SAAS;AAAA,EAC5D,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAjBgB;;;ADCT,kBAAkB,EAAE,OAAO,OAAO;AACvC,QAAM,EAAE,UAAU,IAAI,YAAY;AAGlC,QAAM,MAAM,IAAI,IAAI,OAAO,OAAO;AAAA,IAChC,UAAU;AAAA,MACR,UAAU;AAAA,QACR,aAAa,CAAC,KAAK;AAAA,QACnB,aAAa;AAAA,UACX,YAAY,MAAM;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,cAAc;AAAA,MACd,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,sBAAsB;AAAA,IACxB;AAAA,EACF,CAAC;AAGD,QAAM,WAAW;AAAA,IACf,aAAa,IAAI;AAAA,EACnB,CAAC;AAGD,SAAO;AAAA,IACL;AAAA,EACF;AACF;AA/BgB;;;AEAD,cAAc,KAAK;AAChC,MAAI,wBAAwB;AAAA,IAC1B,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,QAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACD,MAAI,MAAM,YAAY,EAAE,MAAM,QAAQ;AACxC;AATwB;",
  "names": []
}
